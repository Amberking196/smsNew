<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="WARN" monitorInterval="30">
    <properties>
        <!--设置日志在硬盘上输出的目录--> <!-- 
        <property name="logPath">D:\ys\admin\log</property> -->
        <property name="logPath">/home/ysNew/ys-sms/sms1/log</property>
    </properties>
     <!--先定义所有的appender-->
     <appenders>
         <!--这个输出控制台的配置-->
         <console name="Console" target="SYSTEM_OUT">
         <!--输出日志的格式-->
             <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
         </console>
         <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
<!--          <File name="log" fileName="log/test.log" append="false">
             <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
         </File> -->
         <!-- 这个单独会打印出info级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
         <RollingFile name="RollingFileInfo" fileName="${logPath}/logs/info.log"
                      filePattern="${logPath}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log.zip">
                          
             <!--将WARN及其以上级别的日志给DENY掉-->
             <Filters>
                <ThresholdFilter level="WARN"  onMatch="DENY"   onMismatch="NEUTRAL"/>
                <!--控制台只输出level级别的信息（onMatch），其他的直接拒绝（onMismatch）-->       
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>             
             </Filters>
             
             <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
             <DefaultRolloverStrategy>
                <Delete basePath="${logPath}/logs/$${date:yyyy-MM}">
                    <IfFileName glob="info-*.log.zip" />
                    <IfLastModified age="72h" /> <!--超过最后修改时间的下一天将自动删除(保留部分月尾信息)-->
                </Delete>
             </DefaultRolloverStrategy>

             <Policies>
                 <TimeBasedTriggeringPolicy /> <!--每天新日志-->
                 <SizeBasedTriggeringPolicy size="200 MB"/>
             </Policies>
             <DefaultRolloverStrategy max="20"/> <!-- 默认为最多同一文件夹下7个文件，但是实际无效-->
         </RollingFile>
         
         <RollingFile name="RollingFileWarn" fileName="${logPath}/logs/warn.log"
                      filePattern="${logPath}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
              <!--将ERROR及其以上级别的日志给DENY掉-->
             <Filters>
                <ThresholdFilter level="ERROR"  onMatch="DENY"   onMismatch="NEUTRAL"/>
                 <!--控制台只输出level级别的信息（onMatch），其他的直接拒绝（onMismatch）-->       
                <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
             </Filters>
             
             <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
             <DefaultRolloverStrategy>
                <Delete basePath="${logPath}/logs/$${date:yyyy-MM}" >
                    <IfFileName glob="warn-*.log" />
                    <IfLastModified age="100h" />
                </Delete>
             </DefaultRolloverStrategy>
             
             <Policies>
                 <TimeBasedTriggeringPolicy/>
                 <SizeBasedTriggeringPolicy size="200 MB"/>
             </Policies>
             <DefaultRolloverStrategy max="20"/>
         </RollingFile>
         
         <RollingFile name="RollingFileError" fileName="${logPath}/logs/error.log"
                      filePattern="${logPath}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
             <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
             <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
             <Policies>
                 <TimeBasedTriggeringPolicy/>
                 <SizeBasedTriggeringPolicy size="200 MB"/>
             </Policies>
         </RollingFile>
         
     </appenders>
     <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
     <loggers>
         <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
         <logger name="org.springframework" level="INFO"></logger>
         <logger name="org.mybatis" level="INFO"></logger>
         <root level="all">
             <appender-ref ref="Console"/>
             <appender-ref ref="RollingFileInfo"/>
             <appender-ref ref="RollingFileWarn"/>
             <appender-ref ref="RollingFileError"/>
         </root>
     </loggers>
 </configuration>